diff -Nur openswan-2.6.21/linux/net/ipsec/ipsec_mast.c openswan-2.6.21.patched/linux/net/ipsec/ipsec_mast.c
--- openswan-2.6.21/linux/net/ipsec/ipsec_mast.c	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/linux/net/ipsec/ipsec_mast.c	2009-07-12 16:41:04.000000000 +0300
@@ -87,7 +87,7 @@
 DEBUG_NO_STATIC int
 ipsec_mast_open(struct net_device *dev)
 {
-        struct mastpriv *prv = dev->priv; 
+        struct mastpriv *prv = netdev_priv(dev); 
 
 	prv = prv;
 
@@ -334,7 +334,7 @@
 DEBUG_NO_STATIC struct net_device_stats *
 ipsec_mast_get_stats(struct net_device *dev)
 {
-	return &(((struct mastpriv *)(dev->priv))->mystats);
+	return &(((struct mastpriv *)netdev_priv(dev))->mystats);
 }
 
 #if 0
@@ -496,7 +496,7 @@
 ipsec_mast_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
 {
 	struct ipsecmastconf *cf = (struct ipsecmastconf *)&ifr->ifr_data;
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 
 	cf = cf;
 	prv=prv;
@@ -529,7 +529,7 @@
 ipsec_mast_device_event(struct notifier_block *unused, unsigned long event, void *ptr)
 {
 	struct net_device *dev = ptr;
-	struct mastpriv *priv = dev->priv;
+	struct mastpriv *priv = netdev_priv(dev);
 
 	priv = priv;
 
@@ -664,10 +664,10 @@
 	dev->hard_start_xmit	= ipsec_mast_start_xmit;
 	dev->get_stats		= ipsec_mast_get_stats;
 
-	dev->priv = kmalloc(sizeof(struct mastpriv), GFP_KERNEL);
-	if (dev->priv == NULL)
-		return -ENOMEM;
-	memset((caddr_t)(dev->priv), 0, sizeof(struct mastpriv));
+	//dev->priv = kmalloc(sizeof(struct mastpriv), GFP_KERNEL);
+	//if (dev->priv == NULL)
+	//	return -ENOMEM;
+	//memset((caddr_t)(dev->priv), 0, sizeof(struct mastpriv));
 
 	for(i = 0; i < sizeof(zeroes); i++) {
 		((__u8*)(zeroes))[i] = 0;
@@ -729,7 +729,7 @@
 	snprintf(name, IFNAMSIZ, MAST_DEV_FORMAT, vifnum);
 	
 #ifdef alloc_netdev
-	im = alloc_netdev(0, name, ipsec_mast_netdev_setup);
+	im = alloc_netdev(sizeof(struct mastpriv), name, ipsec_mast_netdev_setup);
 #else
 	im = (struct net_device *)kmalloc(sizeof(struct net_device),GFP_KERNEL);
 #endif
@@ -785,8 +785,8 @@
 	kfree(dev_ipsec->name);
 	dev_ipsec->name=NULL;
 #endif /* !NETDEV_23 */
-	kfree(dev_ipsec->priv);
-	dev_ipsec->priv=NULL;
+	//kfree(dev_ipsec->priv);
+	//dev_ipsec->priv=NULL;
 
 	return 0;
 }
@@ -853,8 +853,8 @@
 			dev_mast = mastdevices[i];
 			ipsec_dev_put(dev_mast);
 			unregister_netdev(dev_mast);
-			kfree(dev_mast->priv);
-			dev_mast->priv=NULL;
+			//kfree(dev_mast->priv);
+			//dev_mast->priv=NULL;
 			dev_put(mastdevices[i]);
 			mastdevices[i]=NULL;
 		}
diff -Nur openswan-2.6.21/linux/net/ipsec/ipsec_ocf.c openswan-2.6.21.patched/linux/net/ipsec/ipsec_ocf.c
--- openswan-2.6.21/linux/net/ipsec/ipsec_ocf.c	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/linux/net/ipsec/ipsec_ocf.c	2009-07-12 16:41:04.000000000 +0300
@@ -367,7 +367,7 @@
 
 		/* OCF needs cri_mlen initialized in order to properly migrate the
 		 * session to another driver */
-		crda->crd_mlen = 12;
+		//crda->crd_mlen = 12;
 
 		/* Copy the authenticator to check aganinst later */
 		memcpy(irs->hash, irs->authenticator, 12);
@@ -599,7 +599,7 @@
 
 		/* OCF needs cri_mlen initialized in order to properly migrate
 		 * the session to another driver */
-		crda->crd_mlen = 12;
+		//crda->crd_mlen = 12;
 
 		crda->crd_key    = ipsp->ips_key_a;
 		crda->crd_klen   = ipsp->ips_key_bits_a;
diff -Nur openswan-2.6.21/linux/net/ipsec/ipsec_proc.c openswan-2.6.21.patched/linux/net/ipsec/ipsec_proc.c
--- openswan-2.6.21/linux/net/ipsec/ipsec_proc.c	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/linux/net/ipsec/ipsec_proc.c	2009-07-13 08:55:25.000000000 +0300
@@ -550,7 +550,7 @@
 		ipsec_snprintf(name, (ssize_t) sizeof(name), IPSEC_DEV_FORMAT, i);
 		dev = __ipsec_dev_get(name);
 		if(dev) {
-			priv = (struct ipsecpriv *)(dev->priv);
+			priv = (struct ipsecpriv *)netdev_priv(dev);
 			len += ipsec_snprintf(buffer+len, length-len, "%s",
 				       dev->name);
 			if(priv) {
@@ -947,9 +947,11 @@
 				item->read_proc  = it->readthing;
 				item->write_proc = it->writething;
 				item->data       = it->data;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
 #ifdef MODULE
 				item->owner = THIS_MODULE;
 #endif
+#endif
 			} else {
 				error |= 1;
 			}
diff -Nur openswan-2.6.21/linux/net/ipsec/ipsec_rcv.c openswan-2.6.21.patched/linux/net/ipsec/ipsec_rcv.c
--- openswan-2.6.21/linux/net/ipsec/ipsec_rcv.c	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/linux/net/ipsec/ipsec_rcv.c	2009-07-12 16:41:04.000000000 +0300
@@ -843,7 +843,7 @@
 
 		for(i = 0; i <= ipsecdevices_max; i++) {
 			if(ipsecdevices[i] == NULL) continue;
-			prvdev = ipsecdevices[i]->priv;
+			prvdev = netdev_priv(ipsecdevices[i]);
 			
 			if(prvdev == NULL) continue;
 
@@ -1992,7 +1992,7 @@
 		   {
 		    snprintf(name, IFNAMSIZ, IPSEC_DEV_FORMAT, i);
 		    ipsecdev = __ipsec_dev_get(name);
-		    prv = ipsecdev ? (struct ipsecpriv *)(ipsecdev->priv) : NULL;
+		    prv = ipsecdev ? (struct ipsecpriv *)netdev_priv(ipsecdev) : NULL;
 		    prvdev = prv ? (struct net_device *)(prv->dev) : NULL;
 		    if(prvdev && !strncmp(prvdev->name, skb->dev->name, IFNAMSIZ))
 			{
diff -Nur openswan-2.6.21/linux/net/ipsec/ipsec_tunnel.c openswan-2.6.21.patched/linux/net/ipsec/ipsec_tunnel.c
--- openswan-2.6.21/linux/net/ipsec/ipsec_tunnel.c	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/linux/net/ipsec/ipsec_tunnel.c	2009-07-12 16:41:04.000000000 +0300
@@ -104,7 +104,7 @@
 DEBUG_NO_STATIC int
 ipsec_tunnel_open(struct net_device *dev)
 {
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 	
 	/*
 	 * Can't open until attached.
@@ -610,7 +610,7 @@
 	if (! ixs) {
 		struct ipsecpriv *prv;
 		struct net_device_stats *stats;
-		prv = dev->priv;
+		prv = netdev_priv(dev);
 		stats = (struct net_device_stats *) &(prv->mystats);
 		stats->tx_dropped++;
 		goto alloc_error;
@@ -661,7 +661,7 @@
 DEBUG_NO_STATIC struct net_device_stats *
 ipsec_tunnel_get_stats(struct net_device *dev)
 {
-	return &(((struct ipsecpriv *)(dev->priv))->mystats);
+	return &(((struct ipsecpriv *)netdev_priv(dev))->mystats);
 }
 
 /*
@@ -673,7 +673,7 @@
 ipsec_tunnel_hard_header(struct sk_buff *skb, struct net_device *dev,
 	unsigned short type, const void *daddr, const void *saddr, unsigned len)
 {
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 	struct net_device *tmp;
 	int ret;
 	struct net_device_stats *stats;	/* This device's statistics */
@@ -805,7 +805,7 @@
 			unsigned long raddr, struct sk_buff *skb)
 #endif /* NET_21 */
 {
-	struct ipsecpriv *prv = skb->dev->priv;
+	struct ipsecpriv *prv = netdev_priv(skb->dev);
 	struct net_device *tmp;
 	int ret;
 	struct net_device_stats *stats;	/* This device's statistics */
@@ -895,7 +895,7 @@
 DEBUG_NO_STATIC int
 ipsec_tunnel_set_mac_address(struct net_device *dev, void *addr)
 {
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 	
 	struct net_device_stats *stats;	/* This device's statistics */
 	
@@ -998,7 +998,7 @@
 ipsec_tunnel_cache_update(struct hh_cache *hh, const struct net_device *dev,
 				const unsigned char *  haddr)
 {
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 	
 	struct net_device_stats *stats;	/* This device's statistics */
 	
@@ -1099,7 +1099,7 @@
 ipsec_tunnel_attach(struct net_device *dev, struct net_device *physdev)
 {
         int i;
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 
 	if(dev == NULL) {
 		KLIPS_PRINT(debug_tunnel & DB_TN_REVEC,
@@ -1198,7 +1198,7 @@
 ipsec_tunnel_detach(struct net_device *dev)
 {
         int i;
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 
 	if(dev == NULL) {
 		KLIPS_PRINT(debug_tunnel & DB_TN_REVEC,
@@ -1287,7 +1287,7 @@
 	for(i = 0; i < IPSEC_NUM_IF; i++) {
    	        ipsecdev = ipsecdevices[i];
 		if(ipsecdev != NULL) {
-			if((prv = (struct ipsecpriv *)(ipsecdev->priv))) {
+			if((prv = (struct ipsecpriv *)netdev_priv(ipsecdev))) {
 				prvdev = (struct net_device *)(prv->dev);
 				if(prvdev) {
 					KLIPS_PRINT(debug_tunnel & DB_TN_INIT,
@@ -1316,7 +1316,7 @@
 ipsec_tunnel_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
 {
 	struct ipsectunnelconf *cf = (struct ipsectunnelconf *)&ifr->ifr_data;
-	struct ipsecpriv *prv = dev->priv;
+	struct ipsecpriv *prv = netdev_priv(dev);
 	struct net_device *them; /* physical device */
 #ifdef CONFIG_IP_ALIAS
 	char *colon;
@@ -1510,7 +1510,7 @@
 			ipsec_dev = ipsecdevices[i];
 
 			if(ipsec_dev) {
-				priv = (struct ipsecpriv *)(ipsec_dev->priv);
+				priv = (struct ipsecpriv *)netdev_priv(ipsec_dev);
 				if(priv) {
 					;
 					if(((struct net_device *)(priv->dev)) == dev) {
@@ -1616,10 +1616,10 @@
 	dev->hard_start_xmit	= ipsec_tunnel_start_xmit;
 	dev->get_stats		= ipsec_tunnel_get_stats;
 
-	dev->priv = kmalloc(sizeof(struct ipsecpriv), GFP_KERNEL);
-	if (dev->priv == NULL)
-		return -ENOMEM;
-	memset((caddr_t)(dev->priv), 0, sizeof(struct ipsecpriv));
+	//dev->priv = kmalloc(sizeof(struct ipsecpriv), GFP_KERNEL);
+	//if (dev->priv == NULL)
+	//	return -ENOMEM;
+	//memset((caddr_t)(dev->priv), 0, sizeof(struct ipsecpriv));
 
 	for(i = 0; i < sizeof(zeroes); i++) {
 		((__u8*)(zeroes))[i] = 0;
@@ -1711,7 +1711,7 @@
 
 	sprintf(name, IPSEC_DEV_FORMAT, ifnum);
 #ifdef alloc_netdev
-	dev_ipsec = alloc_netdev(0, name, ipsec_tunnel_netdev_setup);
+	dev_ipsec = alloc_netdev(sizeof(struct ipsecpriv), name, ipsec_tunnel_netdev_setup);
 #else
 	dev_ipsec = (struct net_device*)kmalloc(sizeof(struct net_device), GFP_KERNEL);
 #endif
@@ -1818,9 +1818,9 @@
 	kfree(dev_ipsec->name);
 	dev_ipsec->name=NULL;
 #endif /* !NETDEV_23 */
-	kfree(dev_ipsec->priv);
+	//kfree(dev_ipsec->priv);
 #endif /* alloc_netdev */
-	dev_ipsec->priv=NULL;
+	//dev_ipsec->priv=NULL;
 
 	return 0;
 }
@@ -1871,9 +1871,9 @@
 		kfree(dev_ipsec->name);
 		dev_ipsec->name=NULL;
 #endif /* !NETDEV_23 */
-		kfree(dev_ipsec->priv);
+		//kfree(dev_ipsec->priv);
 #endif /* alloc_netdev */
-		dev_ipsec->priv=NULL;
+		//dev_ipsec->priv=NULL;
 	}
 	return error;
 }
diff -Nur openswan-2.6.21/linux/net/ipsec/ipsec_xmit.c openswan-2.6.21.patched/linux/net/ipsec/ipsec_xmit.c
--- openswan-2.6.21/linux/net/ipsec/ipsec_xmit.c	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/linux/net/ipsec/ipsec_xmit.c	2009-07-12 16:41:04.000000000 +0300
@@ -425,7 +425,7 @@
 		return IPSEC_XMIT_NODEV;
 	}
 
-	ixs->prv = ixs->dev->priv;
+	ixs->prv = netdev_priv(ixs->dev);
 	if (ixs->prv == NULL) {
 		KLIPS_PRINT(debug_tunnel & DB_TN_XMIT,
 			    "klips_error:ipsec_xmit_sanity_check_dev: "
diff -Nur openswan-2.6.21/linux/net/ipsec/pfkey_v2.c openswan-2.6.21.patched/linux/net/ipsec/pfkey_v2.c
--- openswan-2.6.21/linux/net/ipsec/pfkey_v2.c	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/linux/net/ipsec/pfkey_v2.c	2009-07-12 16:41:04.000000000 +0300
@@ -672,7 +672,7 @@
 		return -EPROTONOSUPPORT;
 	}
 
-	if((current->uid != 0)) {
+	if((current_uid() != 0)) {
 		KLIPS_PRINT(debug_pfkey,
 			    "klips_debug:pfkey_create: "
 			    "must be root to open pfkey sockets.\n");
@@ -872,7 +872,7 @@
 		SENDERR(-error);
 	}
 
-	if((current->uid != 0)) {
+	if((current_uid() != 0)) {
 		KLIPS_PRINT(debug_pfkey,
 			    "klips_debug:pfkey_sendmsg: "
 			    "must be root to send messages to pfkey sockets.\n");
diff -Nur openswan-2.6.21/packaging/linus/config-all.h openswan-2.6.21.patched/packaging/linus/config-all.h
--- openswan-2.6.21/packaging/linus/config-all.h	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/packaging/linus/config-all.h	2009-07-12 16:41:04.000000000 +0300
@@ -22,9 +22,11 @@
 #define CONFIG_KLIPS_AH 1
 #endif
 
+#if 0
 #ifndef CONFIG_KLIPS_DEBUG 
 #define CONFIG_KLIPS_DEBUG 1
 #endif
+#endif
 
 #ifndef CONFIG_KLIPS_ESP
 #define CONFIG_KLIPS_ESP 1
@@ -72,13 +74,12 @@
 #define CONFIG_KLIPS_ALG_CRYPTOAPI #error
 #define CONFIG_KLIPS_ALG_AES #error
 
-#if 0
-/* off by default requiers kernel patch */
+
 #ifndef CONFIG_KLIPS_OCF
-#define CONFIG_KLIPS_OCF 0
-#endif
+#define CONFIG_KLIPS_OCF 1
 #endif
 
+
 #ifndef CONFIG_KLIPS_ALG_AES_MAC
 #define CONFIG_KLIPS_ALG_AES_MAC 1
 #endif
diff -Nur openswan-2.6.21/packaging/makefiles/module.defs openswan-2.6.21.patched/packaging/makefiles/module.defs
--- openswan-2.6.21/packaging/makefiles/module.defs	2009-03-30 16:11:28.000000000 +0300
+++ openswan-2.6.21.patched/packaging/makefiles/module.defs	2009-07-12 16:41:04.000000000 +0300
@@ -1,5 +1,7 @@
 # To config as static (preferred), 'y'.  To config as module, 'm'.
-CONFIG_KLIPS=m
+CONFIG_KLIPS=y
+
+CONFIG_KLIPS_OCF=y
 
 # To enable authentication without encryption, say 'y'.   (Not so recommended)
 CONFIG_KLIPS_AH=y
