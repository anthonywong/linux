#!/usr/bin/make -f
#
# $(DEBIAN)/rules for Ubuntu linux
#
# Use this however you want, just give credit where credit is due.
#
# Copyright (c) 2007 Ben Collins <bcollins@ubuntu.com>
#

ifeq ($(DEBIAN),)
DEBIAN=debian.chrome
endif

# dpkg-buildpackage passes options that are incomptatible
# with the kernel build.
unexport CFLAGS
unexport LDFLAGS

# This is the debhelper compatability version to use.
export DH_COMPAT=4
export LC_ALL=C
export SHELL=/bin/bash -e

# Common variables for all architectures
include $(DEBIAN)/rules.d/0-common-vars.mk

# Pull in some arch specific stuff
include $(DEBIAN)/rules.d/$(arch).mk

# Maintainer targets
include $(DEBIAN)/rules.d/1-maintainer.mk

# Debian Build System targets
binary: binary-indep binary-arch

build: build-arch build-indep

clean: debian/control
	dh_testdir
	dh_testroot
	dh_clean

	# d-i stuff
	rm -rf $(DEBIAN)/d-i-$(arch)

	# normal build junk
	rm -rf $(DEBIAN)/abi/$(release)-$(revision)
	rm -rf $(builddir)
	rm -f $(stampdir)/stamp-*
	rm -rf $(DEBIAN)/linux-*

	# This gets rid of the d-i packages in control
	cp -f $(DEBIAN)/control.stub $(DEBIAN)/control
	cp $(DEBIAN)/changelog debian/changelog

	# Install the copyright information.
	cp $(DEBIAN)/copyright debian/copyright

distclean: clean
	rm -rf $(DEBIAN)/control $(DEBIAN)/control.stub \
		debian/changelog \
		debian/control debian/control.stub debian/copyright \
		debian/debian.env

# Builds the image, arch headers and debug packages
include $(DEBIAN)/rules.d/2-binary-arch.mk

# Rules for building the udebs ($(DEBIAN)-installer)
include $(DEBIAN)/rules.d/5-udebs.mk

# Builds the source, doc and linux-headers indep packages
include $(DEBIAN)/rules.d/3-binary-indep.mk

# Various checks to be performed on builds
include $(DEBIAN)/rules.d/4-checks.mk

# Misc stuff
$(DEBIAN)/control.stub: \
		$(DEBIAN)/scripts/control-create		\
		$(DEBIAN)/control.stub.in			\
		$(DEBIAN)/changelog			\
		$(wildcard $(DEBIAN)/control.d/* $(DEBIAN)/sub-flavours/*.vars)
	for i in $(DEBIAN)/control.stub.in; do	\
	  new=`echo $$i | sed 's/\.in$$//'`;					\
	  cat $$i | sed -e 's/PKGVER/$(release)/g'                              \
	        -e 's/ABINUM/$(abinum)/g'                                       \
		-e 's/SRCPKGNAME/$(src_pkg_name)/g'                             \
	  > $$new;								\
	done
	flavours="$(wildcard $(DEBIAN)/control.d/vars.* $(DEBIAN)/sub-flavours/*.vars)";\
	for i in $$flavours; do							\
	  $(SHELL) $(DEBIAN)/scripts/control-create $$i |				\
		sed -e 's/PKGVER/$(release)/g'                                  \
		-e 's/ABINUM/$(abinum)/g'                                       \
		-e 's/SRCPKGNAME/$(src_pkg_name)/g'                             \
		>> $(DEBIAN)/control.stub;						\
	done
	cp $(DEBIAN)/control.stub $(DEBIAN)/control

.PHONY: debian/control
debian/control: $(DEBIAN)/control.stub
	rm -rf $(builddir)/modules $(builddir)/firmware			\
		$(builddir)/kernel-versions $(builddir)/package-list	\
		$(builddir)/$(DEBIAN)
	mkdir -p $(builddir)/modules/$(arch)/
	mkdir -p $(builddir)/firmware/$(arch)/
	touch $(builddir)/modules/$(arch)/kernel-image
	# kernel-wedge needs to poke around in $(DEBIAN)/
	ln -nsf $(CURDIR)/debian $(builddir)/debian

	if [ ! -d $(builddir)/modules/$(build_arch) ]; then		\
		mkdir -p $(builddir)/modules/$(build_arch);		\
		cp $(builddir)/modules/$(arch)/*			\
			$(builddir)/modules/$(build_arch);		\
	fi
	if [ ! -d $(builddir)/firmware/$(build_arch) ]; then		\
		mkdir -p $(builddir)/firmware/$(build_arch);		\
		cp $(builddir)/firmware/$(arch)/*			\
			$(builddir)/firmware/$(build_arch);		\
	fi

	cp $(DEBIAN)/control.stub debian/control
